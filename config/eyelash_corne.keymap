#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F     &kp P  &kp B                                    &kp UP               &kp J      &kp L  &kp U     &kp Y      &kp SEMI  &kp BSPC
&kp ESC    &kp A  &kp R  &kp S     &kp T  &kp G                          &kp LEFT  &kp RET   &kp RIGHT  &kp M      &kp N  &kp E     &kp I      &kp O     &kp RET
&kp LSHFT  &kp Z  &kp X  &kp C     &kp D  &kp V      &kp C_PLAY_PAUSE              &kp DOWN             &kp K      &kp H  &kp SQT   &kp COMMA  &kp DOT   &kp RSHFT
                         &kp LGUI  &mo 1  &kp SPACE                                                     &kp LCTRL  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "COLEMAK";
        };

        lower_layer {
            bindings = <
&kp F11  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                &mmv MOVE_UP                    &kp N6    &kp N7     &kp N8          &kp N9     &kp N0    &trans
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_DOWN  &kp SEMI  &kp MINUS  &kp EQUAL       &kp LBKT   &kp RBKT  &trans
&trans   &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &mkp RCLK                    &mmv MOVE_DOWN                  &kp BSLH  &kp FSLH   &kp APOSTROPHE  &kp COMMA  &kp DOT   &trans
                         &trans  &trans  &trans                                                                &trans    &mo 3      &trans
            >;

            label = "NUMBER";
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR            &kp PRCNT                            &mmv MOVE_UP                     &kp CARET     &kp AMPS        &kp ASTRK          &kp LPAR        &kp RPAR          &kp GRAVE
&trans  &kp C_MUTE    &mkp LCLK     &mkp MCLK  &mkp RCLK           &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp COLON     &kp UNDERSCORE  &kp PLUS           &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp TILDE
&trans  &out OUT_USB  &out OUT_BLE  &kp C_RW   &kp C_FAST_FORWARD  &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp QUESTION  &kp PIPE        &kp DOUBLE_QUOTES  &kp LESS_THAN   &kp GREATER_THAN  &trans
                                    &trans     &mo 3               &trans                                                                &trans        &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Functions {
            display-name = "RGB";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &tog 4           &trans           &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        layer_4 {
            bindings = <
&kp TAB    &kp T  &kp Q  &kp W   &kp E   &kp R                        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp I  &kp A  &kp S   &kp D   &kp F                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp B  &kp Z  &kp X   &kp C   &kp V      &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                         &kp N1  &kp N2  &kp SPACE                                    &trans  &trans  &trans
            >;
        };
    };
};
