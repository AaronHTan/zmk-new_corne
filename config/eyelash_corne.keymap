#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB        &kp Q               &kp W           &kp F               &kp P             &kp B                                    &kp UP               &kp J      &kp L              &kp U                &kp Y            &kp SEMICOLON        &kp MINUS
&kp GRAVE      &mt LEFT_CONTROL A  &mt LEFT_ALT R  &mt LEFT_COMMAND S  &mt LEFT_SHIFT T  &kp G                          &kp LEFT  &kp RET   &kp RIGHT  &kp M      &mt RIGHT_SHIFT N  &mt RIGHT_COMMAND E  &mt RIGHT_ALT I  &mt RIGHT_CONTROL O  &kp SQT
&kp BACKSLASH  &kp Z               &kp X           &kp C               &kp D             &kp V      &kp C_PLAY_PAUSE              &kp DOWN             &kp K      &kp H              &kp COMMA            &kp PERIOD       &kp SLASH            &kp EQUAL
                                                   &lt 3 CAPS          &kp SPACE         &lt 2 ESC                                                     &lt 1 DEL  &kp ENTER          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "COLEDH";
        };

        numbers {
            bindings = <
&kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                            &mmv MOVE_UP                     &trans  &trans     &trans         &trans            &kp COLON     &kp PLUS
&kp TILDE  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5                 &mmv MOVE_LEFT  &mkp MB1        &mmv MOVE_RIGHT  &trans  &kp RSHFT  &kp RGUI       &kp RALT          &kp RCTRL     &kp DOUBLE_QUOTES
&kp PIPE   &kp N6           &kp N7       &kp N8    &kp N9      &kp N0       &trans                    &mmv MOVE_DOWN                   &trans  &trans     &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &kp UNDER
                                         &trans    &trans      &trans                                                                  &trans  &trans     &trans
            >;
        };

        symbols {
            bindings = <
&kp TAB    &kp EXCLAMATION   &kp AT_SIGN        &kp HASH      &kp DOLLAR      &kp PERCENT                             &mmv MOVE_UP                     &kp LEFT_BRACKET  &kp LESS_THAN         &kp EQUAL     &kp GREATER_THAN       &kp RIGHT_BRACKET  &kp SLASH
&kp GRAVE  &kp LEFT_CONTROL  &kp LEFT_ALT       &kp LEFT_GUI  &kp LEFT_SHIFT  &kp QUESTION            &mmv MOVE_LEFT  &mkp MB1        &mmv MOVE_RIGHT  &kp LEFT_BRACE    &kp LEFT_PARENTHESIS  &kp COLON     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &kp MINUS
&kp N1     &kp SQT           &kp DOUBLE_QUOTES  &kp CARET     &kp BACKSLASH   &kp TILDE     &kp N1                    &mmv MOVE_DOWN                   &kp PIPE          &kp AMPERSAND         &kp ASTERISK  &kp PLUS               &kp UNDERSCORE     &kp GRAVE
                                                &trans        &trans          &trans                                                                   &trans            &trans                &trans
            >;
        };

        numbers {
            bindings = <
&kp TAB    &kp T  &kp Q  &kp W   &kp E   &kp R                        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp I  &kp A  &kp S   &kp D   &kp F                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp B  &kp Z  &kp X   &kp C   &kp V      &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                         &kp N1  &kp N2  &kp SPACE                                    &trans  &trans  &trans
            >;
        };
    };
};
